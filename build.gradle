import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'maven-publish'
	id 'dev.architectury.loom' version '1.7-SNAPSHOT'
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id 'org.jetbrains.kotlin.jvm' version '2.0.20'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

architectury {
	platformSetupLoomIde()
	fabric()
}

fabricApi {
	configureDataGeneration()
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "Cobblemon"
		url = "https://maven.impactdev.net/repository/development/"
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"tmcraft" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		mappings file("src/main/resources/tmcraft.mappings.tiny")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modCompileOnly("com.cobblemon:mod:${project.cobblemon_version}")
	modRuntimeOnly("com.cobblemon:fabric:${project.cobblemon_version}")

	modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
	compileOnly("net.luckperms:api:${project.luckperms_version}")
	modImplementation("com.google.code.gson:gson:2.8.9")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

kotlin {
	jvmToolchain {
		(17)
	}
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = "17"
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}